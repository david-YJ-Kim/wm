property:
  type: product

server:
  port: 15001
  shutdown: graceful
  servlet:
    contextPath: /wm


logging:
  config: classpath:log4j2.xml
  level:
    root: INFO
    jdbc.sqlonly: INFO ## 이부분 추가.
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql: WARN
    org.springframework: WARN
    org.quartz: WARN
    org.elasticsearch: WARN
    org.apache.kafka: WARN

    com.zaxxer.hikari: WARN
    com.zaxxer.hikari.HikariConfig: WARN

    com.netflix.discovery: OFF  # 로컬에서 띄울때 디스커버리 없이 로깅 찍는것
    org.springframework.cloud.config: OFF
    org:
      springframework:
        jdbc:
          core:
            JdbcTemplate : debug
      hibernate:
        SQL: debug

#start oracle
mybatis:
  config-location: classpath:mybatis/mybatis-config.xml
#end oracle

spring:
  datasource:
    #oracle
#    driver-class-name: oracle.jdbc.OracleDriver
#    url: jdbc:oracle:thin:@dev-mes-oracle.ctj5pd0b3rdj.us-east-1.rds.amazonaws.com:1522:ORCL
#    username: mesadm
#    password: absolics12#
    
    ## 로깅
    driver-class-name: net.sf.log4jdbc.sql.jdbcapi.DriverSpy
    url: jdbc:log4jdbc:oracle:thin:@dev-mes-oracle.ctj5pd0b3rdj.us-east-1.rds.amazonaws.com:1522:ORCL
    # 로컬에서 서버 URL 접속 정보로 붙지를 못함 내용 찾아봐야함
    username: mesadm
    password: absolics12#

    hikari:
      minimum-idle: 5
      maximum-pool-size: 10
      connection-timeout: 3000 # HikariCP 커넥션 요청 후 대기하는 시간
      validation-timeout: 1000  # HikariCP 에서 커넥션을 주기 전 DB 헬스체크 의 타임아웃 Connection.isValid()
      idle-timeout: 30000 # 놀고있는 (idle) 커넥션이 자동 Close 되기 전 대기시간
      max-lifetime: 60000 # 커넥션 풀에서 대기할 수 있는 커넥션의 최대 생명주기(시간)
      auto-commit: true


  jpa:
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true
          batch_size: 1000
    show-sql: true
    database-platform: org.hibernate.dialect.OracleDialect
  transaction:
    mode: jdbc


##### Application Config ####
ap:
  info:
    group: WFS
    site: SVM
    env: PROD
    sequence: 1
  worker:
    pool-size:
      core: 5
      max: 50
    capacity: 1000
    name:
      prefix: FIS-ASYNC-
  interface:
    solace:
      host: localhost:55555
      vpn: MES
      client:
        username: default
        password: admin
      connect:
        trial-count: 2
      reconnect:
        trial-count: 20
        per-host: 5
    destination:
      send:
        topic: SVM/DEV/EDC/CMN/00
      receive:
        queue: SVM_DEV_FIS_CMN
        init: SVM/DEV/FIS/CMN/RELOAD
  seq:
    rule:
      path: C:\\workspace\\abs\\
      name: SequenceRule.json
  shutdown:
    force:
      timeout:
        ms: 1000
    polling:
      interval:
        ms: 10
  local:
    active:
      profile: local